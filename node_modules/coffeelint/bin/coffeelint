#!/usr/bin/env node

// Require dependencies.
var path = require('path');
var fs = require('fs');
var optimist = require ('optimist');

// Require our library.
var thisdir = path.dirname(fs.realpathSync(__filename));
var coffeelint = require(path.join(thisdir, '../lib', 'coffeelint'));


// Print an error to the console.
var report = function (path, error) {

    var fields = [
        path + "#" + error.lineNumber,
        error.level,
        error.message
    ];

    if (error.context) {
        fields.push(error.context)
    }

    console.warn(fields.join(" : "));
};

// Return the file's contents.
var read = function (path) {
    var realPath = fs.realpathSync(path);
    return fs.readFileSync(realPath).toString();
};


// Lint the given files with the given configuration and print a report
// on the outcome. Return an exit code indicating the success of the
// operation.
var lint = function (paths, configPath) {

    // Load the users configuration, if they've passed one.
    var config = (configPath) ? JSON.parse(read(configPath)) : {};

    var foundError = false;
    var foundWarning = false;

    // Lint and report on each script.
    paths.forEach(function (path) {
        var source = read(path);
        var errors = coffeelint.lint(source, config);
        errors.forEach(function (error) {
            report(path, error);
            foundError = foundError || error.level === 'error';
            foundWarning = foundWarning || error.level === 'warn';
        });
    });

    // If we're good, print a success report.
    if (!foundError && !foundWarning) {
        console.log('Lint free!');
    }

    // Return a non-zero return code if we've found an error.
    return (foundError) ? 1 : 0;
};


// Declare command line options.
var optimist = require('optimist')
    .usage('Usage: coffeelint [options] source [...]')
    .alias('f', 'file')
    .alias('h', 'help')
    .alias('v', 'version')
    .describe('f', 'Specify a custom configuration file.')
    .describe('h', 'Print help information.')
    .describe('v', 'Print current version number.');


if (optimist.argv.v) {
    console.log(coffeelint.VERSION);
    process.exit(0);
} else if (optimist.argv.h) {
    optimist.showHelp();
    process.exit(0);
} else if (optimist.argv._.length < 1) {
    optimist.showHelp();
    process.exit(1);
} else {
    var paths = optimist.argv._;
    var configPath = optimist.argv.f;
    var returnCode = lint(paths, configPath);
    process.exit(returnCode);
}

// vim: filetype=javascript
